local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local function formatNumber(num)
    local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi"}
    local i = 1
    while num >= 1000 and i < #suffixes do
        num = num / 1000
        i = i + 1
    end
    local formatted = string.format("%.2f", num)
    formatted = formatted:gsub("%.00", "")
    return formatted .. suffixes[i]
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LeaderboardGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 700, 0, 380)
Frame.Position = UDim2.new(0.5, -350, 0.1, 0)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 40)
Header.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
Header.BorderSizePixel = 0
Header.Parent = Frame

local columns = {"Player", "Strength", "Durability", "Kills", "Damage"}
local columnWidths = {0.25, 0.18, 0.18, 0.18, 0.21}

for i, text in ipairs(columns) do
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(columnWidths[i], 0, 1, 0)
    label.Position = UDim2.new((i == 1) and 0 or (columnWidths[1] + (i > 2 and (columnWidths[2] + (i > 3 and (columnWidths[3] + (i > 4 and columnWidths[4] or 0)) or 0)) or 0)), 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 20
    label.Parent = Header
end

local PlayerListFrame = Instance.new("ScrollingFrame")
PlayerListFrame.Size = UDim2.new(1, -10, 1, -50)
PlayerListFrame.Position = UDim2.new(0, 5, 0, 45)
PlayerListFrame.CanvasSize = UDim2.new(0,0,0,0)
PlayerListFrame.ScrollBarThickness = 6
PlayerListFrame.BackgroundTransparency = 1
PlayerListFrame.Parent = Frame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = PlayerListFrame

local function createPlayerRow(player, stats)
    local row = Instance.new("Frame")
    row.Size = UDim2.new(1, -10, 0, 30)
    row.BackgroundTransparency = 1
    row.Name = player.Name
    row.Parent = PlayerListFrame

    local values = {
        player.DisplayName,
        formatNumber(stats.Strength or 0),
        formatNumber(stats.Durability or 0),
        formatNumber(stats.Kills or 0),
        formatNumber(stats.Damage or 0)
    }

    local pos = 0
    for i, text in ipairs(values) do
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(columnWidths[i], 0, 1, 0)
        label.Position = UDim2.new(pos, 0, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = Color3.new(1,1,1)
        label.Font = Enum.Font.SourceSans
        label.TextSize = 18
        label.Parent = row
        pos = pos + columnWidths[i]
    end

    return row
end

local function updateLeaderboard()
    for _, row in pairs(PlayerListFrame:GetChildren()) do
        if row:IsA("Frame") then
            row:Destroy()
        end
    end
    
    for _, player in pairs(Players:GetPlayers()) do
        local statsFolder = player:FindFirstChild("leaderstats")
        if statsFolder then
            local stats = {
                Strength = statsFolder:FindFirstChild("Strength") and statsFolder.Strength.Value or 0,
                Durability = statsFolder:FindFirstChild("Durability") and statsFolder.Durability.Value or 0,
                Kills = statsFolder:FindFirstChild("Kills") and statsFolder.Kills.Value or 0,
                Damage = statsFolder:FindFirstChild("Damage") and statsFolder.Damage.Value or 0
            }
            createPlayerRow(player, stats)
        end
    end
    
    PlayerListFrame.CanvasSize = UDim2.new(0,0,0,#Players:GetPlayers() * 32)
end

RunService.Heartbeat:Connect(updateLeaderboard)
Players.PlayerAdded:Connect(updateLeaderboard)
Players.PlayerRemoving:Connect(updateLeaderboard)
